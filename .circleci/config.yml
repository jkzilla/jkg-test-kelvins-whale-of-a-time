version: 2.1

defaults:
  environment: &environment
    DOCKER_REGISTRY: docker.io
    DOCKER_USER: kelvintaywl

jobs:
  sample:
    machine:
      # Try to use the latest Machine image if possible
      # See https://circleci.com/docs/2.0/configuration-reference/#available-machine-images
      image: ubuntu-2204:2022.04.1
    steps:
      - run:
          name: check dependencies
          command: |
            docker version
            
            which java && java --version
            
            # redis-cli not included
            which redis-cli || true

            # mysql CLI not included
            which mysql || true
      - run:
          name: Run Redis
          command: |
            docker run -p "6379:6379" --name redis circleci/redis:5.0.6-alpine3.10
          background: true
      - run:
          name: Run MySQL
          command: |
            # See https://docs.docker.com/engine/reference/commandline/run/#set-environment-variables--e---env---env-file
            docker run -p "3306:3306" -v "$(pwd)/mysql/initdb:/docker-entrypoint-initdb.d" --env MYSQL_ROOT_PASSWORD --env MYSQL_DATABASE --env MYSQL_USER --env MYSQL_PASSWORD --name mysql circleci/mysql:5.7.20
          environment:
            # see https://circleci.com/docs/2.0/postgres-config#example-mysql-project
            MYSQL_ROOT_PASSWORD: rootpw
            MYSQL_DATABASE: test_db
            MYSQL_USER: user
            MYSQL_PASSWORD: passw0rd
          background: true
      - run:
          name: Install dependencies
          command: |
            # just an example of installing extra dependencies
            sudo apt-get update -y
            sudo apt-get install -y mysql-client

            sudo wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            sudo rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: 'v0.6.1'
      - run:
          name: Wait on Redis server to be ready
          command: |
            dockerize -wait tcp://127.0.0.1:6379 -timeout 30s
      - run:
          name: Wait on MySQL server to be ready
          command: |
            # see env vars on this MySQL container
            docker container inspect mysql | jq "."

            dockerize -wait tcp://127.0.0.1:3306 -timeout 30s
      - run:
          name: Run script against MySQL
          command: |
            # disabling SSL mode, see https://stackoverflow.com/a/65916427
            # not ideal, but is just for this command
            echo "DESCRIBE tasks;" > test.sql
            mysql --ssl-mode=DISABLED -h 127.0.0.1 -u root -prootpw test_db < test.sql
workflows:
  test:
    jobs:
      - sample
